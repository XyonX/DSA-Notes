// Online C++ compiler to run C++ program online
#include <iostream>
#include <bits/stdc++.h>

using namespace std;

struct node {
    int data;
    node* next;
    node(int val){
        data=val;
        next=NULL;
    }
};


node *create (vector<int>arr){
    node*head = new node(0);
    node*temp=head;
    
    for(int i=0;i<arr.size();i++){
        node* n = new node(arr[i]);
        temp->next=n;
        temp=temp->next;
    }
    return head->next;
}

void display(node*head){
    node*temp=head;
    while(temp){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

node* reverse (node*head){
    node*temp=head;
    node*prev=NULL;
    while(temp){
        node*t=temp->next;
        temp->next=prev;
        prev=temp;
        temp=t;
        
    }
    return prev;
}


bool detectCycle(node*head){
   node* slow =head;
   node* fast =head;
    
    while(fast && fast->next){
        slow=slow->next;
        fast=fast->next->next;
        if(fast==slow)return true;

    }
    return false;
}

node * mergeTwoSortedLinkedList(node* h1, node* h2){
    
    node* head = new node(0);
    node*temp=head;
    
    node*t1=h1;
    node*t2=h2;
    
    while( t1 && t2){
        
        if(t1->data<t2->data){
            node*n = new node(t1->data);
            temp->next=n;
            temp=temp->next;
            t1=t1->next;
            
        }else{
            node*n = new node(t2->data);
            temp->next=n;
            temp=temp->next;
            t2=t2->next;
        }
    }
    if(t1){
        temp->next=t1;
    }
    if(t2){
        temp->next=t2;
    }
    return head->next;
    
}

int main() {
 node *head = create({1,2,3,4,5});
 display(head);
 node*rh = reverse(head);
 display(rh);
 
 cout<<"has cycle : "<<detectCycle(head)<<endl;
 node* r1=create({1,2,3});
 node*r2=create({7,8,9,10});
 node*ret = mergeTwoSortedLinkedList(r1,r2);
 display(ret);

    return 0;
}