//prac
//longest substring without repeat
// this is a slidng window poblem 
//the shiriniing logicis when we find a repeating character we movie the left to the index where teh earlier lreeang character was
int  ssWithouRepeat(vector<int>arr){
    if(arr.size()==0)return 0;
    int maxLength=INT_MIN;
    int l=0;
    map<int,int>freqMap;
    for(int r=0;r<arr.size();r++){
        if(freqMap.find(arr[r]) != freqMap.end()){
            l=freqMap[arr[r]]+1;
        }
        
        maxLength=max(maxLength,r-l+1);
        freqMap[arr[r]]=r;
    }
    return maxLength;
}

//thi is the similar version of array ut its using string 

//we can simply use a rray oof size 256 to also store the char but ii choose the map for now 
int ssWithouRepat_Strin(string s){
    
    int maxLength = INT_MIN;
    int l=0;
    map<char,int>freqMap;
    for(int r=0; r<s.size();r++){
        if(freqMap.find(s[r]) !=freqMap.end()){
            l=max(l,freqMap[s[r]]+1);
        }
        maxLength = max(maxLength,r-l+1);
        freqMap[s[r]]=r;
    }
    return maxLength;
    
}